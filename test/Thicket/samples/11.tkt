// Reference http://blog.podsnap.com/ducers2.html

model unit 

typedef ReducingFn[a,r] = r -> a -> r
typedef Transducer[a,b] = [r] ReducingFn[a,r] -> ReducingFn[b,r] 

model native
class number this:native {
    (*) : number -> number
}{
    def (*) n = n // Fake but it's not important
}

model Read

model string {
    read : Read
}

class transducer this:unit {
    t_dub   : Transducer[number,number]
    t_rep   : [a] Transducer[a,a]
    t_parse : [a] Transducer[Read,string]
} {
    def t_dub   f r b = f r $ 2 * b
    def t_rep   f r b = f (f r b) b
    def t_parse f r s = f r $ s read
}
