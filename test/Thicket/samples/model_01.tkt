model string {
    toDom : dom
}

type Peano {
    model Zero
    model Succ { _ : Peano }
}

class peano this:Peano {
    unbox : Peano
    (+) : peano -> peano
    fold : [a] (unit -> a) -> (peano -> a) -> a
} {
    def unbox = this
    
    def Zero.(+) p = self
    def Succ.(+) p = 
        let p = peano this._ + p in
            peano $ Succ $ p unbox

    def Zero.fold z _ = z ()
    def Succ.fold _ s = s $ peano this._
}

def zero :unit -> dom = this -> {
    "Zero" toDom
}

def succ :peano -> dom = this -> {
    <div> ("SUCC".toDom) (this fold zero succ) </div>
}
