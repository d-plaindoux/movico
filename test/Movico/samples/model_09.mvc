class Function[a b] this:(a -> b) {
    (<<) : a -> b
    (@) : [c] Function[b c] -> Function[a c]
} {
    def (<<) a = this a
    def (@) g = Function $ a -> g << (self << a)
}

class Main this:unit {
    run : Function[unit unit]
    f1  : unit -> string
    f2  : string -> unit
} {
    def run = (Function self.f1) @ (Function self.f2)
    def f1 _ = "Hello World!"
    def f2 _ = ()
}
