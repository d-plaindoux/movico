type Option [a] {
    model None
    model Some { _ : a }
}

class OptionClass[a] this:Option[a] {
    map     : [b] (a -> b) -> Option[b]
    flatmap : [b] (a -> Option[b]) -> Option[b]
} {
    def Some[a].map f = Some (f this._)
    def Some[a].flatmap f = f this._

    def None[a].map f = None
    def None[a].flatmap f = None
}
