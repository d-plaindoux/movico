// --------------------------------------------------------------------
// Person and population
// --------------------------------------------------------------------

object PersonModel { 
    firstname: string
    name: string
    age: int
}

view PersonView this:Person {
    <div onClick=this.tick> 
        <div>this.firstname</div>
        <div>this.name</div>
        <div>this.age</div>
    </div>
}
 
view NewPerson this:Population {
    let onSubmit () = (this.addPerson (self.firstname,self.name)) in
    <form onSubmit=(onSubmit())>
        <input type="text" id="firstname"/>
        <input type="text" id="name"/>
        <input type="submit" value="Add"/>
    </form>
}

view Population this:Population {
    [PersonView Person(p) for p in this.persons]
    <hr/>
    (NewPerson this)
}

class Person this:PersonModel {
    firstname = this.firstname
    name = this.name
    age = this.age
    tick = (self(this.age(this.age add 1)))
} 

class Population this:[Person] {
    persons = [p for p in this if p.age leq 100]
    addPerson p:(string,string) = (self(this.add APerson{p._1 p._2 0}))
}

// --------------------------------------------------------------------
// Todo
// --------------------------------------------------------------------

object TodoModel {
    what: string
}

class Todos this:[TodoModel] {
    new = fun s:string -> (self (this.add Todo{s}))
    todos = this
}

view TodosView this: Todos {
    [ <li> p.what </li> for p in this.todos ]
}

view TodoAdder this: Todos {
    <form onSubmit=(this.new self.todo)>
        <input type="text" id="todo"/>
        <input type="submit" value="Add"/>
    </form>
}