/*
 * Thicket
 * https://github.com/d-plaindoux/thicket
 *
 * Copyright (c) 2015 Didier Plaindoux
 * Licensed under the LGPL2 license.
 */
 
module Unit.Test

from Core.Lang.When import when
from Data.Try import try success failure
from Data.Boolean import bool
from Data.Comparable import Comparable 
from Data.Hashable import Hashable

// TODO
model Logger {
    log : string -> Logger
}

class unitTest this:Try[Logger] { 
    assertTrue  : string -> bool -> unitTest    
    assertFalse : string -> bool -> unitTest    
    assertEqual : [a] string -> Comparable[a] -> a -> unitTest
}{    
    def Failure.assertTrue  _ _   = self
    
    def Success.assertTrue n b = 
        unitTest $ 
            when b
            then { Success $ this._ log n }
            else { Failure n }

    def assertFalse n b = self assertTrue n b.not

    def Failure.assertEqual _ _ _ = self
    
    def Success.assertEqual n c1 c2 = 
        unitTest $
            when (c1 == c2)
            then { Success $ this._ log n }
            else { Failure n }
}
