/*
 * Thicket
 * https://github.com/d-plaindoux/thicket
 *
 * Copyright (c) 2015 Didier Plaindoux
 * Licensed under the LGPL2 license.
 */
 
module Unit.Test

import Data.Unit
import Data.String 

from Core.Lang.When import when
from Data.Boolean import bool false
from Data.Comparable import Comparable 
from Data.Hashable import Hashable

model UnitLog {
    ok : string -> unit
    ko : string -> unit
}

model UnitTest {
    result : bool
    logger : UnitLog
}

class unitTest this:UnitTest { 
    unbox       : UnitTest
    assertTrue  : string -> bool -> unitTest    
    assertFalse : string -> bool -> unitTest    
    assertEqual : [a] string -> Comparable[a] -> a -> unitTest
}{    
    def unbox = this
    
    def assertTrue n b = 
        when b
        then { let _ = this logger ok n in self }
        else { let _ = this logger ko n in unitTest $ new this with result = false }

    def assertFalse n b = self assertTrue n b.not
    
    def assertEqual n c1 c2 = self assertTrue n (c1 == c2)
}
