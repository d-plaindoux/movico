/*
 * Thicket
 * https://github.com/d-plaindoux/thicket
 *
 * Copyright (c) 2015 Didier Plaindoux
 * Licensed under the LGPL2 license.
 */
 
module Client.Document

from Core.Lang import do

from Client.Trigger import MouseTrigger

from Data.Native import native
from Data.Internal import internal
from Data.String import string
from Data.Option import option Some None
 
class dom this:native {
    addAttribute : string -> string -> dom
    addReflex : [a] string -> (dom -> a) -> dom
    
    addChild : dom -> dom
    removeChilds : dom
    
    clone : dom
    replace : dom -> dom
    remove : dom

    addMouseTrigger : MouseTrigger -> dom
} {
    def addAttribute n d = internal "dom.setAttribute" self n d
    def addReflex n f = internal "dom.setFunction" self n (n -> f $ dom n)
    
    def addChild d = internal "dom.appendChild" self d
    def removeChilds = internal "dom.removeChilds" self
    
    def clone = dom $ internal "dom.clone" self
    def replace d = internal "dom.replace" self d
    def remove = internal "dom.remove" self
    
    def addMouseTrigger m =
        do
        { m onmouseover  map $ self addReflex "onmouseover" } ;
        { m onmouseout   map $ self addReflex "onmouseout"  } ;
        { m onmousedown  map $ self addReflex "onmousedown" } ;
        { m onmouseup    map $ self addReflex "onmouseup"   } ;
        { m onmouseclick map $ self addReflex "onclick"     } 
        return self
}

class document this:string {
    new  : dom
    find : option[dom]
} {
    def new  = dom $ internal "dom.createElement" this
    def find = internal "dom.elementById" this (e -> some $ dom e) none
}
   
def toDom : string -> dom = s -> dom $ internal "string.toDom" s
