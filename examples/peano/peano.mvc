/*
 * Movico
 * https://github.com/d-plaindoux/movico
 *
 * Copyright (c) 2015 Didier Plaindoux
 * Licensed under the LGPL2 license.
 */
 
module Peano
 
from Number import number
from String import string
 
type Peano {
    model Zero
    model Succ { _ : Peano }
}
 
class peano this:Peano {
    unbox    : Peano
    fold     : [a] a -> (peano -> a) -> a
    (+)      : peano -> peano
} {
    def unbox = this
    def Zero.fold z s = z
    def Succ.fold z s = s (self this._)
    def Zero.(+) p = p
    def Succ.(+) p = self $ Succ $ self this._ + p unbox
}
 
class peanoInterp this:peano {
    toNumber : number
    toString : string
} {
    def toNumber = 
        let onSucc = fun p -> 1 + $ self p toNumber in
            this fold 0 onSucc
            
    def toString = 
        let onSucc = fun p -> "Succ(" + (self p toString) + ")" in
            this fold "Zero" onSucc
}

def zero : peano = peano Zero
def un   : peano = peano $ Succ Zero
