/*
 * Movico
 * https://github.com/d-plaindoux/movico
 *
 * Copyright (c) 2015 Didier Plaindoux
 * Licensed under the LGPL2 license.
 */
 
module Core.String

from Core.Boolean   import bool
from Core.Internal  import internal
from Core.Native    import native
from Core.Number    import number
from Core.Option    import option None Some

class string this:native {
    // derive comparable[string]
    (==)     : string -> bool
    (!=)     : string -> bool
    (+)      : string -> string
    toNumber : option[number]
    hash     : number
} {
    def (==) s = internal "string.==" apply self s true false
    def (!=) s = (self == s) not
    def (+) s = internal "string.+" apply self s
    def toNumber = option $ internal "string.toNumber" apply self Some None
    def hash = internal "string.hash" apply self
}

def eol : string = "\n"
