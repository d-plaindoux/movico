/*
 * Movico
 * https://github.com/d-plaindoux/movico
 *
 * Copyright (c) 2015 Didier Plaindoux
 * Licensed under the LGPL2 license.
 */

module Core.Number

from Core.Internal import internal
from Core.Native import native
from Core.Boolean import *

class number this:native {
    isa comparable[number]
    (+)      : number -> number
    (-)      : number -> number
    (*)      : number -> number
    (/)      : number -> number
    hash     : number
    toString : string
} {
    def (==) n = internal "number.==" apply self n true false
    def (!=) n = (self == n) not
    def (>>) n = internal "number.<" apply self n
    def (<<) n = n >> self
    def (+) n = internal "number.+" apply self n
    def (-) n = internal "number.-" apply self n
    def (*) n = internal "number.*" apply self n
    def (/) n = internal "number./" apply self n
    def hash = self
    def toString = internal "number_to_string" apply self
}
