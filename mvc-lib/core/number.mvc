/*
 * Movico
 * https://github.com/d-plaindoux/movico
 *
 * Copyright (c) 2015 Didier Plaindoux
 * Licensed under the LGPL2 license.
 */

module Number

from Internal import internal
from Native import native
from Boolean import bool

class number this:native {
    (==)     : number -> bool
    (>=)     : number -> bool
    (<=)     : number -> bool
    (+)      : number -> number
    (-)      : number -> number
    (*)      : number -> number
    (/)      : number -> number
    hash     : number
    toString : string
} {
    def (==) n = internal "number_equal" apply this n
    def (>=) n = internal "number_ge" apply this n
    def (<=) n = internal "number_le" apply this n
    def (+) n = internal "number_addition" apply this n
    def (-) n = internal "number_substract" apply this n
    def (*) n = internal "number_multiply" apply this n
    def (/) n = internal "number_divide" apply this n
    def hash = self
    def toString = internal "number_to_string" apply this
}
