/*
 * Movico
 * https://github.com/d-plaindoux/movico
 *
 * Copyright (c) 2015 Didier Plaindoux
 * Licensed under the LGPL2 license.
 */
 
module Client.Document

from Core.Native import native
from Core.Internal import internal
from Core.String import string
from Core.Option import option Some None
 
class document this:unit {
    elementById : string -> option[dom]
    (@) : string -> option[dom]
} {
    def elementById n = internal "document.elementById" apply self n (fun e -> Some $ dom e) None
    def (@) = self elementById
}

class dom this:native {
    appendChild : dom -> dom
    (<<) : dom -> dom
} {
    def appendChild d = self $ internal "dom.appendChild" apply self d
    def (<<) = self appendChild
}

def element : string -> option[dom] = fun n -> document () @ n
def toDom : string -> dom = fun s -> dom $ internal "string.toDom" apply s
