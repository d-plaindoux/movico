/*
 * Movico
 * https://github.com/d-plaindoux/movico
 *
 * Copyright (c) 2015 Didier Plaindoux
 * Licensed under the LGPL2 license.
 */
 
module Client.Document

from Data.Native import native
from Data.Internal import internal
from Data.String import string
from Data.Option import option Some None
 
class document this:unit {
    elementById : string -> option[dom]
    (@) : string -> option[dom]
} {
    def elementById n = internal "document.elementById" apply n (e -> some $ dom e) none
    def (@) = self elementById
}

class dom this:native {
    addAttribute : string -> dom -> dom
    addChild : dom -> dom
} {
    def addAttribute n d = internal "dom.setAttribute" apply self n d
    def addChild d = internal "dom.appendChild" apply self d
}

def new$element : string -> dom = s -> dom $ internal "dom.newElement" apply s 
def element : string -> option[dom] = n -> document () @ n
def toDom : string -> dom = s -> dom $ internal "string.toDom" apply s
