/*
 * Thicket
 * https://github.com/d-plaindoux/thicket
 *
 * Copyright (c) 2015 Didier Plaindoux
 * Licensed under the LGPL2 license.
 */

module Example.Console.Application

import Boot.Core
import Boot.Client
import System.Console

from Example.Console.Core import *

model Components {
    content : option[dom]
    output  : option[dom]
    execute : option[dom]
    clear   : option[dom]
}

def makeContent : logger -> runtimeClass -> dom -> dom = logger runtime content -> {
    content onKeyEvent KeyPress $d n -> 
        when (n == RETURN) 
        then { do 
               { content value map $ logger.log };
               { content value map $ runtime run };
               { content replace $ makeContent logger runtime $ content clone }
               return () 
             }
        else { () }
}

def startApplication : Components -> unit = component -> {
    let logger = logger $ component.output unbox in
    let runtime = runtime $ logger.log in
        do
        {
            component.clear map
            $ clear -> clear onMouseEvent MouseClick 
            $ clear -> logger.clear
        };
        {
            component.content map $ makeContent logger runtime
        };
        {
            component.execute map 
            $ execute -> execute onMouseEvent MouseClick 
            $ execute -> component content map 
            $ content -> content value map 
            $ value   -> runtime run value
        }
        return ()
}