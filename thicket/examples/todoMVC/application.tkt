/*
 * Thicket
 * https://github.com/d-plaindoux/thicket
 *
 * Copyright (c) 2015 Didier Plaindoux
 * Licensed under the LGPL2 license.
 */

module Example.TodoMVC.Application

from Core.Lang.Do import do

from Data.Unit import unit
from Data.Pair import Pair
from Data.String import string
from Data.Number import number
from Data.List import emptyList list

from Example.TodoMVC.Models import Todo
from Example.TodoMVC.Controller import *
from Example.TodoMVC.Views import render

from System.Console import console

model Application {
    edited          : number
    length          : number
    todos           : list[Todo]

    add             : string -> Application
    change          : number -> string -> Application
    toggle          : number -> Application
    edit            : number -> Application
    remove          : number -> Application

    completeAll     : unit   -> Application
    clearCompleted  : unit   -> Application
    
    filterAll       : unit   -> Application
    filterActive    : unit   -> Application
    filterCompleted : unit   -> Application
}

def createApplication : Application = {
    manageApplication createController
}

def manageApplication : controller -> Application = a -> { 
    Application 
        { a.edited }
        { a.length }
        { a.todos }
        { s   -> manageApplication $ a add s            }
        { i s -> manageApplication $ a change i s       }
        { s   -> manageApplication $ a toggle s         }
        { s   -> manageApplication $ a edit s           }
        { s   -> manageApplication $ a remove s         }
        { _   -> manageApplication $ a completeAll      }
        { _   -> manageApplication $ a clearCompleted   }
        { _   -> manageApplication $ a filter All       }
        { _   -> manageApplication $ a filter Active    }
        { _   -> manageApplication $ a filter Completed }
}

def renderApplication : Application -> Application = a -> { 
    render $ Application 
            { a.edited }
            { a.length }
            { a.todos }
            { s   -> renderApplication $ a add s              }
            { i s -> renderApplication $ a change i s         }
            { s   -> renderApplication $ a toggle s           }
            { s   -> renderApplication $ a edit s             }
            { s   -> renderApplication $ a remove s           }
            { _   -> renderApplication $ a completeAll ()     }
            { _   -> renderApplication $ a clearCompleted ()  }
            { _   -> renderApplication $ a filterAll ()       }
            { _   -> renderApplication $ a filterActive ()    }
            { _   -> renderApplication $ a filterCompleted () }            
}
