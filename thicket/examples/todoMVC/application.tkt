/*
 * Thicket
 * https://github.com/d-plaindoux/thicket
 *
 * Copyright (c) 2015 Didier Plaindoux
 * Licensed under the LGPL2 license.
 */

module Example.TodoMVC.Application

from Core.Lang.Do import do

from Data.Unit import unit
from Data.Pair import Pair
from Data.String import string
from Data.Number import number
from Data.List import emptyList,list
from Data.Boolean import bool

from Example.TodoMVC.Models import *
from Example.TodoMVC.Controller import *
from Example.TodoMVC.Views import render

from System.Console import console

model ApplicationContext {
    edited : number
    filter : filter
    length : number
    todos  : list[Todo]
}

model ApplicationAction {
    add            : string -> Application
    change         : number -> string -> Application
    toggle         : number -> Application
    edit           : number -> Application
    remove         : number -> Application
    completeAll    : unit   -> Application
    clearCompleted : unit   -> Application
    filtering      : filter -> Application
}

model Application {
    context : ApplicationContext
    action  : ApplicationAction
}

def createApplication : Application = {
    manageApplication createController
}

def manageApplication : controller -> Application = a -> { 
    Application 
        (ApplicationContext 
            { a.edited }
            { a.filter }
            { a.length }
            { a.todos }
        )
        (ApplicationAction
            { s   -> manageApplication $ a add s }
            { i s -> manageApplication $ a change i s }
            { s   -> manageApplication $ a toggle s }
            { s   -> manageApplication $ a edit s }
            { s   -> manageApplication $ a remove s }
            { _   -> manageApplication $ a completeAll }
            { _   -> manageApplication $ a clearCompleted }
            { f   -> manageApplication $ a filtering f }
        )
}

def renderedApplication : Application -> Application = a -> { 
    render $ Application 
        (ApplicationContext 
            { a.context.edited }
            { a.context.filter }
            { a.context.length }
            { a.context.todos  }
        )
        (ApplicationAction        
            { s   -> renderedApplication $ a.action add s }
            { i s -> renderedApplication $ a.action change i s }
            { s   -> renderedApplication $ a.action toggle s }
            { s   -> renderedApplication $ a.action edit s }
            { s   -> renderedApplication $ a.action remove s }
            { _   -> renderedApplication $ a.action completeAll () }
            { _   -> renderedApplication $ a.action clearCompleted () }
            { f   -> renderedApplication $ a.action filtering f }
        )
}
