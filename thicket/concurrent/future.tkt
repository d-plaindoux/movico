/*
 * Thicket
 * https://github.com/d-plaindoux/thicket
 *
 * Copyright (c) 2015 Didier Plaindoux
 * Licensed under the LGPL2 license.
 */
 
module Concurrent.Future
 
from Data.Boolean import bool
from Concurrent.Channel import Channel
from Data.Try import try
 
model Future[a] {
    _ : try[a]
}
 
class future[a] this:Future[a] {
    map     : [b] (a -> b) -> future[b]
    flapmap : [b] (a -> future[b]) -> future[b]
} {
    // TODO
}

/**
 * Constructors
 */

def future : [a] try[a] -> future[a] = t -> { 
    future $ Future t
}