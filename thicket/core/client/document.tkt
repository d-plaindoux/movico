/*
 * Thicket
 * https://github.com/d-plaindoux/thicket
 *
 * Copyright (c) 2015 Didier Plaindoux
 * Licensed under the LGPL2 license.
 */

module Client.Document

from Client.Event import EventType eventType

from Data.Native import native
from System.Internal import internal
from Data.String import string
from Data.Number import number number2string
from Data.Option import option some none

class dom this:native {
    addAttribute : string -> string -> dom
    addChild : dom -> dom
    removeChilds : dom
    
    onEvent : [a] EventType -> (dom -> a) -> dom

    clone : dom
    replace : dom -> dom
    remove : dom
} {
    def addAttribute n d = internal "dom.setAttribute" self n d
    def addChild d = internal "dom.appendChild" self d
    def removeChilds = internal "dom.removeChilds" self

    def onEvent e f = internal "dom.setFunction" self (eventType e toString) (n -> f $ dom n)

    def clone = dom $ internal "dom.clone" self
    def replace d = internal "dom.replace" self d
    def remove = internal "dom.remove" self
}

class document this:string {
    create : dom
    find : option[dom]
} {
    def create = dom $ internal "dom.createElement" this
    def find = internal "dom.elementById" this (e -> some $ dom e) none
}

def adapter string2dom : string -> dom = s -> {
    dom $ internal "string.toDom" s
}

def adapter number2dom : number -> dom = s -> {
    dom $ internal "string.toDom" (number2string s)
}
