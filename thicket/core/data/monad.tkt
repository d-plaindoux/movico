/*
 * Thicket
 * https://github.com/d-plaindoux/thicket
 *
 * Copyright (c) 2015 Didier Plaindoux
 * Licensed under the LGPL2 license.
 */
 
module Data.Funtor

typedef Functor[F a b] = F[a->b] -> F[a] -> F[b]

model Monad[M a] {
    return : a -> M[a]
    (>>=)  : [b] M[a] -> (a -> M[b]) -> M[b]
}
