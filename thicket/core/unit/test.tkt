/*
 * Thicket
 * https://github.com/d-plaindoux/thicket
 *
 * Copyright (c) 2015 Didier Plaindoux
 * Licensed under the LGPL2 license.
 */
 
module Unit.Test

from Data.Unit import unit
from Data.String import string

from Core.Lang.Do import do
from Core.Lang.When import when
from Data.Boolean import bool,false
from Data.Number import number
from Data.Comparable import Comparable 
from Data.List import list

from Unit.Suite import UnitLog, UnitTest

model UnitLogger {
    success : string -> unit
    failure : string -> unit
}

model UnitTest {
    done   : number
    logger : UnitLogger
}

model Assert[A] {
    true      : string -> bool -> A
    false     : string -> bool -> A
    contained : [a] string -> Comparable[a] -> list[a] -> A
    equals    : [a] string -> Comparable[a] -> a -> A
}

class unitTest this:UnitTest {
    +Assert[unitTest]
}{    
    def true n b = 
        when b
        then { 
            do 
            { this.logger.success n }
            return unitTest $ new this with done = (this.done + 1)
        } 
        else { 
            do 
            { this.logger.failure n }
            return self
        }

    def false n b = self.true n b.not
    def contained n c l = self.false n $ l filter (c ==) empty
    def equals n c1 c2 = self.true n (c1 == c2)
}
