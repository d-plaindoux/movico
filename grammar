entity    ::= objectDef 
            | classDef
            | viewDef
            | import

objectDef ::= "object" IDENT "{" params "}"
classDef  ::= "class" IDENT "(" type ")" "{" methods "}"
viewDef   ::= "view" IDENT "(" type ")" "{" expr "}"
import    ::= "import" STRING

params    ::= (param init? ("," param init?)*)?
param     ::= IDENT (":" type)?
init      ::= "=" expr

type      ::= IDENT 
            | "(" type ")" 
            | type "," type 
            | "[" type "]" 
            | type "->" type 

methods   ::= IDENT "(" params ")" (":" type) "{" expr "}"

expr      ::= NUMBER 
            | STRING 
            | CHAR
	    | "this" 
            | "self"
            | "{" (expr ";"?)* "}"
            | expr "." expr 
            | IDENT "(" args ")" 
            | IDENT  "{" args "}"
            | "(" params ")" (":" type)? "->" expr
	    | tag
	    | ifExpr
            | forExpr

args      ::= (expr ("," expr)*)?

tag       ::= "<" IDENT attr* ">" content "</" IDENT? ">" 
            | "<" IDENT attr* "/>"

attr      ::= IDENT "=" expr

ifExpr    ::= "if" "(" expr ")" expr ("else" expr)?
ifExpr    ::= "for" IDENT "in" expr expr

